/**
 * @license
 * Copyright (c) 2016 David Hudson
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
(function(){"use strict";var t=function(i,e,s){return this instanceof t?(this.queue=[],this.activeEl=i,this.trackingEl=e,this.verticies={},this.mouseP={x:void 0,y:void 0},this.options=s||{},this.timeout=null,this.options.timeout=this.options.timeout||1e3,this.options.debug=this.options.debug||!1,this):new t(i,e,s)};t.prototype.watch=function(){return this.timeout=setTimeout(this.cancel.bind(this),this.options.timeout),this.boundListener=this.listen.bind(this),document.addEventListener("mousemove",this.boundListener),this.promise()},t.prototype.setVerticies=function(t,i){var e;t=t||this.activeEl,i=i||this.trackingEl,e=i.getBoundingClientRect(),this.verticies.p0={x:this.mouseP.x,y:this.mouseP.y},this.verticies.p1={x:e.left,y:e.top},this.verticies.p2={x:e.left,y:e.bottom}},t.prototype.listen=function(t){this.mouseP.x=t.pageX,this.mouseP.y=t.pageY,this.verticiesSet()||this.setVerticies(),this.options.debug&&this.debug(),this.isActive()&&(this.isInBounds(this.mouseP,this.verticies)||this.cancel())},t.prototype.resolvePromises=function(){for(var t in this.queue)this.queue[t]()},t.prototype.verticiesSet=function(){return"object"==typeof this.verticies.p0&&"object"==typeof this.verticies.p1&&"object"==typeof this.verticies.p2},t.prototype.isActive=function(){return this.verticiesSet()&&this.queue.length>0},t.prototype.isInBounds=function(t,i){var e=[i.p2.x-i.p0.x,i.p2.y-i.p0.y],s=[i.p1.x-i.p0.x,i.p1.y-i.p0.y],o=[t.x-i.p0.x,t.y-i.p0.y],n=e[0]*e[0]+e[1]*e[1],h=e[0]*s[0]+e[1]*s[1],r=e[0]*o[0]+e[1]*o[1],u=s[0]*s[0]+s[1]*s[1],p=s[0]*o[0]+s[1]*o[1],c=1/(n*u-h*h),d=(u*r-h*p)*c,l=(n*p-h*r)*c;return d>=0&&l>=0&&d+l<1},t.prototype.promise=function(){var t=this;return{then:function(i){"function"==typeof i&&t.queue.push(i)}}},t.prototype.cancel=function(){if(document.removeEventListener("mousemove",this.boundListener),this.resolvePromises(),clearTimeout(this.timeout),this.queue=[],this.options.debug)return this.boundingBox.style.visibility="hidden",this.testPoint1.style.visibility="hidden",this.testPoint2.style.visibility="hidden",this.testPoint3.style.visibility="hidden",void(this.testPoint4.style.visibility="hidden")},t.prototype.debug=function(){function t(t,i,e){t.style.visibility="visible",t.style.left=i.x,t.style.top=i.y,t.style.backgroundColor=e}function i(){var t=document.createElement("div");return t.style="position: absolute; opacity: 0.7; width: 0; height: 0; border-style: solid; border-color: transparent #007bff transparent transparent;",document.body.appendChild(t),t}function e(){var t=document.createElement("div");return t.style="position: absolute; width: 13px; height: 13px; border-radius: 50%; z-index:99999;",document.body.appendChild(t),t}var s=this.mouseP;this.boundingBox=this.boundingBox||i(),this.testPoint1=this.testPoint1||e(),this.testPoint2=this.testPoint2||e(),this.testPoint3=this.testPoint3||e(),this.testPoint4=this.testPoint4||e(),t(this.testPoint1,s,"red"),t(this.testPoint2,this.verticies.p0,"blue"),t(this.testPoint3,this.verticies.p1,"green"),t(this.testPoint4,this.verticies.p2,"purple"),this.boundingBox.style.visibility="visible",this.boundingBox.style.left=this.verticies.p0.x,this.boundingBox.style.top=this.verticies.p1.y,this.boundingBox.style.borderWidth=this.verticies.p0.y+"px "+(this.verticies.p1.x-this.verticies.p0.x)+"px "+(this.verticies.p2.y-this.verticies.p0.y)+"px 0"},"function"==typeof define&&define.amd?define("intent",[],function(){return t}):window.Intent=t}).call(this);